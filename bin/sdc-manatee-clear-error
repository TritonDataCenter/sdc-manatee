#!/bin/bash

#
# sdc-manatee-clear-error: clear sdc manatee from error state
#

if [[ -n "$TRACE" ]]; then
    export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
    set -o xtrace
fi
set -o errexit
set -o pipefail

function usage() {
cat << HERE
usage: $0 shard_id

Clear a manatee shard from the error state.

OPTIONS:
-h Show this message
-v Verbose

EXAMPLE:
./sdc-manatee-clear-error sdc
HERE
}

while getopts "h:v" OPTION
do
    case $OPTION in
        h)
            usage
            exit 1
            ;;
        v)
            set -o xtrace
            verbose="1"
            ;;
        ?)
            usage
            exit
            ;;
    esac
done

if [[ -z $verbose ]]
then
    SHARD=$1
else
    SHARD=$2
fi

if [[ -z $SHARD ]]
then
    echo "must specify a shard_id"
    usage
    exit 1
fi

ROOT=/opt/smartdc/bin

shard_info=$(sdc-manatee-stat | json $SHARD)
[[ $? -eq 0 ]] || fatal "unable to retrieve shard info"

if [[ -z $shard_info ]]
then
    echo "shard info doesn't exist"
    exit 1
fi

error=$(echo $shard_info | json "error")

if [[ -z $error ]]
then
    echo "shard is not in error"
    exit 1
fi

primary=$(echo $error | json "primary")
primary_zone_id=$(echo $error | json "zoneId")
echo "got primary zone id $primary_zone_id"

# XXX replace the vmadm and zlogin with sdc-role list and sdc-oneachnode once
# moray supports readonly mode on manatee errors. presently all of the moray
# dependent tools fail since there's no manatee. We will require this when
# manatee is x-dc and we can no longer find all manatee instances via vmadm |
# grep

standby=$(echo $error | json "standby")
standby_zone_id=$(vmadm list -o uuid,alias,nics.0.ip | grep manatee | \
    grep $standby | head -n 1 | tr -s ' ' | cut -d ' ' -f1);
echo "got standby zone id $standby_zone_id"

async_zone_id=$( vmadm list -o uuid,alias,nics.0.ip | grep manatee | \
    grep -v $primary | grep -v $standby | head -n 1 | tr -s ' ' | \
    cut -d ' ' -f1);
echo "got async zone_id $async_zone_id"

if [[ $standby_zone_id ]]
then
    echo "running manatee-clear on standby $standby_zone_id"
    zlogin $standby_zone_id "source ~/.bashrc; manatee-clear" &
fi
if [[ $async_zone_id ]]
then
    echo "running manatee-clear on async $async_zone_id"
    zlogin $async_zone_id "source ~/.bashrc; manatee-clear" &
fi
echo "sleeping for 10s before invoking manatee-clear on primary"
sleep 10
echo "running manatee-clear on primary $primary_zone_id"
zlogin $primary_zone_id "source ~/.bashrc; manatee-clear" &
